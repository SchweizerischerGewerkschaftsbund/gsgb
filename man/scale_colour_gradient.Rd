% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scales.R
\name{scale_colour_gradient}
\alias{scale_colour_gradient}
\alias{scale_colour_gradient2}
\alias{scale_colour_gradientn}
\alias{scale_colour_continuous}
\alias{scale_color_gradient}
\alias{scale_color_continuous}
\alias{scale_color_gradient2}
\alias{scale_color_gradientn}
\title{Scale color continuous with SGB-colors}
\usage{
scale_colour_gradient(..., low = pal_sgb_rot[5], high = pal_sgb_rot[1])

scale_colour_gradient2(
  ...,
  low = pal_sgb_dunkelblau[5],
  mid = pal_sgb_hellblau[2],
  high = pal_sgb_rot[5]
)

scale_colour_gradientn(..., colours = pal_sgb, colors = pal_sgb)
}
\arguments{
\item{...}{parameters passed on to \code{scale_color_gradient()}.}

\item{low, high}{Colours for low and high end of the gradient}

\item{mid}{Colour for mid point}

\item{colors, colours}{Vector of colours to use for n-colour gradient.}
}
\description{
Overwrites the default continuous color scale with SGB-colors. To use
another palette or custom colours, use \code{scale_color_gradient()}.
}
\examples{
\dontrun{
library(ggplot2)
library(gsgb)
theme_set(theme_sgb(base_size = 9))

ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
  geom_point(aes(color = Sepal.Length))

# This gives the same:
ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
  geom_point(aes(color = Sepal.Length)) +
  scale_color_gradient()

# Custom gradient colors:
ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
  geom_point(aes(color = Sepal.Length)) +
  scale_color_gradient(low = pal_sgb_dunkelblau[5], high = pal_sgb_gelb[5])

# 3-color gradient (default):
ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
  geom_point(aes(color = Sepal.Length)) +
  scale_color_gradient2(midpoint = 6)

# 3-color gradient (custom):
ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
  geom_point(aes(color = Sepal.Length)) +
  scale_color_gradient2(low = pal_sgb_rot[5], mid = "white", high = pal_sgb_gelb[5],
                        midpoint = 6)

# n-color gradient (default):
ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
  geom_point(aes(color = Sepal.Length)) +
  scale_color_gradientn()

# n-color gradient (custom):
ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
  geom_point(aes(color = Sepal.Length)) +
  scale_color_gradientn(colors = pal_sgb_pref)

# Use `na.value = NA` to hide missing values but keep the original axis range
df_na <- data.frame(
  value = seq(1, 20),
  x = runif(20),
  y = runif(20),
  z1 = c(rep(NA, 10), rnorm(10)))

ggplot(df_na, aes(x = value, y)) +
  geom_point(aes(color = z1)) +
  scale_color_gradient(na.value = NA)

# or select custom color for missing values
ggplot(df_na, aes(x = value, y)) +
  geom_point(aes(color = z1)) +
  scale_color_gradient(na.value = SGBdunkelblau)
}

}
\seealso{
Other colour scales: 
\code{\link{scale_colour_discrete}()},
\code{\link{scale_fill_discrete}()},
\code{\link{scale_fill_gradient}()}
}
\concept{colour scales}
